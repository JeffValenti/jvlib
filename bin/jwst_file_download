#!/usr/bin/env python

from argparse import ArgumentParser
from pathlib import Path
from requests import get
from os import getenv


# Configure argument parser.
parser = ArgumentParser(
    prog = 'jwst_download_file',
    description = 'Download a JWST file by name from the MAST archive')
parser.add_argument(
    'filename', help='Name of file to download')
parser.add_argument(
    '--token', default=None, help='MAST API token')

# Parse command line arguments.
args = parser.parse_args()

# Get mast token.
mast_api_token = args.token
if not mast_api_token:
    mast_api_token = getenv('MAST_API_TOKEN')
if not mast_api_token:
    path = Path.home() / '.mast_api_token'
    try:
        with open(path, 'r') as fp:
            lines = fp.read().splitlines()
            if len(lines) == 1:
                mast_api_token = lines[0]
            else:
                print('Ignoring ~/.mast_api_token, expected one line')
    except FileNotFoundError:
        pass

# Download file.
mast_url = "https://mast.stsci.edu/api/v0.1/Download/file"
params = dict(uri=f"mast:JWST/product/{args.filename}")
if mast_api_token:
    headers = dict(Authorization=f"token {mast_api_token}")
else:
    headers = {}
r = get(mast_url, params=params, headers=headers, stream=True)
r.raise_for_status()
with open(args.filename, "wb") as fobj:
    for chunk in r.iter_content(chunk_size=1024000):
        fobj.write(chunk)
