#!/usr/bin/env python

from argparse import ArgumentParser

from jvlib.mast.api import JwstProgramData

# Configure argument parser.
parser = ArgumentParser(
    prog = 'jwst_program_data',
    description = 'Interface with MAST archive for specified JWST program')
parser.add_argument(
    'progid', type=int, help='JWST program ID')
parser.add_argument(
    '-c', '--constraint',
    help='constraint on instruments, observations, and/or filetypes')
parser.add_argument(
    '-b', '--browse', action='store_true',
    help='show in browser datasets and files that satisfy constraints')
parser.add_argument(
    '-d', '--download', action='store_true',
    help='download to current directory files that satisfy constraints')
parser.add_argument(
    '-l', '--list', action='store_true',
    help='list to terminal files that satisfy constraints')
parser.add_argument(
    '-s', '--summarize', action='store_true',
    help='summarize in browser files that satisfy constraints')

# Parse arguments
args = parser.parse_args()

# Instantiate JwstProgramData object.
progdata = JwstProgramData(args.progid)

# Apply constraints.
if args.constraint:
    progdata.apply_constraint_string(args.constraint)

# List filenames.
if args.list:
    for filename in progdata.filenames:
        print(filename)

# Download files.
if args.download:
    progdata.download_files()

# Browse results.
if args.browse:
    progdata.browse_datasets()
    progdata.browse_files()

# Summarize files.
if args.summarize:
    filetype_summary = progdata.summarize('filetype')
    filetype_summary.show_in_browser(jsviewer=True)
    obs_summary = progdata.summarize('obs')
    obs_summary.show_in_browser(jsviewer=True)
    inst_summary = progdata.summarize('inst')
    inst_summary.show_in_browser(jsviewer=True)
